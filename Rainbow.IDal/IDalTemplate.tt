<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
using System;
using System.Collections.Generic;
using Rainbow.Models;
<#@include file="$(SolutionDir)\T4\MultipleOutputHelper.ttinclude"#> 
/*******************************************************************************************
 *  以下是代码工具生成，请不要做任何添加
 *  否则代码会被覆盖
 *  描    述： 数据处理IDal层     					
 *  创 建 者： zhuhj
 *  创建时间： 2016-01-13
 *  来    源：
 *  修改记录：
 *  此模板生成实体层:Rainbow.IDal
 * ****************************************************************************************/
 namespace Rainbow.IDal
{

  <#
        string connectionString= Manager.appcon;        
        SqlConnection conn = new SqlConnection(connectionString);
        conn.Open();
    
        string selectQuery ="SET FMTONLY ON; select * from @tableName; SET FMTONLY OFF;";
        SqlCommand command = new SqlCommand(selectQuery,conn);
        SqlDataAdapter ad = new SqlDataAdapter(command);
        System.Data.DataSet ds = new DataSet(); 
  
        var manager = Manager.Create(Host, GenerationEnvironment);  
        System.Data.DataTable schema = conn.GetSchema("Tables");
		string createtime=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");

		foreach(System.Data.DataRow row in schema.Rows)
				{    
					ds.Tables.Clear();
					string tb_name= row["TABLE_NAME"].ToString();        
					
 #>
	/// <summary>
    /// 定义<#=tb_name#>的接口
    /// </summary>
	public partial interface I<#=tb_name#>Dal: IRepository<<#=tb_name#>>
	{
	}
<#}#>
	
}